- hosts: ceph_servers[0]
  tags: [ceph.cephfs]
  become: true
  tasks:
    - name: check if cephfs tank exists
      changed_when: false
      command: ceph fs status tank
      register: tank_status

    - name: create cephfs tank
      command: ceph fs volume create tank
      when: >-
        "Invalid filesystem" in tank_status.stderr

    - name: check for min_size on tank
      changed_when: false
      command: ceph osd pool get cephfs.tank.meta min_size
      register: tank_min_size

    - name: set tank min_size
      vars:
        min_size: "{{ [groups.ceph_servers|length, 2]|min }}"
      when: >-
        "min_size: {}".format(min_size) not in tank_min_size.stdout
      block:
        - command: ceph osd pool set cephfs.tank.meta min_size {{ min_size }}
        - command: ceph osd pool set cephfs.tank.data min_size {{ min_size }}

    - name: create client.nfs user
      command: ceph fs authorize tank client.nfs / rw
      register: client_nfs

    - name: create client.nfsmeta user
      command: >-
        ceph auth get-or-create client.nfsmeta
      register: client_nfsmeta

    - name: set caps for client.nfsmeta
      command: >
        ceph auth caps client.nfsmeta
        mon 'allow r'
        osd 'allow rw pool=cephfs.tank.meta namespace=ganesha'

    - name: save keyrings
      delegate_to: localhost
      copy:
        dest: credentials/ceph.client.{{ item.name }}.keyring
        content: "{{ item.content }}"
      loop:
        - name: nfs
          content: |
            {{ client_nfs.stdout }}
        - name: nfsmeta
          content: |
            {{ client_nfsmeta.stdout }}

